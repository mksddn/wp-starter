<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">
  <description>A custom set of code standard rules to check for WordPress code.</description>
  <!-- How to scan -->
  <arg value="sp"/><!-- Show sniff and progress -->
  <arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
  <arg name="extensions" value="php"/>
  <arg name="parallel" value="10"/><!-- Enables parallel processing when available for faster results. -->
  <arg name="cache" value=".phpcs.cache"/>
  <!-- What to scan -->
  <file>content/themes/</file>
  <!-- Exclude basic project directories -->
  <exclude-pattern>*/\.idea/*</exclude-pattern>
  <exclude-pattern>*/\.github/*</exclude-pattern>
  <exclude-pattern>*/vendor/*</exclude-pattern>
  <exclude-pattern>*/node_modules/*</exclude-pattern>
  <exclude-pattern>*/assets/*</exclude-pattern>
  <exclude-pattern>content/uploads/</exclude-pattern>
  <rule ref="WordPress">
    <exclude name="WordPress.PHP.YodaConditions" />
    <exclude name="Generic.Commenting.DocComment.MissingShort" />
    <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />
    <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
    <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
    <exclude name="Generic.Arrays.DisallowShortArraySyntax" />
    <exclude name="WordPress.PHP.DisallowShortTernary.Found" />
    <exclude name="Generic.PHP.DisallowShortOpenTag.EchoFound" />
  </rule>
  <!-- Prohibit Yoda Conditions expressions -->
  <rule ref="Generic.ControlStructures.DisallowYodaConditions"/>
  <!-- Disable comments blocks -->
  <rule ref="WordPress-Docs">
    <exclude name="Squiz.Commenting.FileComment.Missing" />
    <exclude name="Squiz.Commenting.FileComment.MissingPackageTag" />
    <exclude name="Squiz.Commenting.ClassComment.Missing" />
    <exclude name="Squiz.Commenting.FunctionComment.Missing" />
    <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType" />
    <exclude name="Squiz.Commenting.VariableComment.Missing" />
    <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment" />
    <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag" />
  </rule>
  <!-- Forbidden functions -->
  <rule ref="Generic.PHP.ForbiddenFunctions">
    <properties>
      <property name="forbiddenFunctions" type="array">
        <element key="delete" value="unset"/>
        <element key="print" value="echo"/>
        <element key="create_function" value="null"/>
        <element key="sizeof" value="count"/>
        <!-- <element key="var_dump" value="null"/> duplicate of WP rule-->
        <element key="print_r" value="null"/>
        <element key="eval" value="null"/>
        <element key="compact" value="null"/>
      </property>
    </properties>
  </rule>
  <!-- AutoEscaped functions -->
  <rule ref="WordPress.Security.EscapeOutput">
    <properties>
      <property name="customAutoEscapedFunctions" type="array">
        <element value="rd_render_attributes" />
        <element value="rd_get_picture_html" />
      </property>
    </properties>
  </rule>
  <!-- Disallow long array syntax. -->
  <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found"/>
  <!-- Allow symbol `/` in hook names. -->
  <rule ref="WordPress.NamingConventions.ValidHookName">
    <properties>
      <property name="additionalWordDelimiters" value="/" />
    </properties>
  </rule>
  <rule ref="Generic.Metrics.NestingLevel">
    <properties>
      <property name="absoluteNestingLevel" value="3"/>
    </properties>
  </rule>
  <!-- Minimum WP version to check for usage of deprecated functions, classes and function parameters -->
  <config name="minimum_wp_version" value="6.2"/>
  <!-- Check PHP version compatibility -->
  <rule ref="PHPCompatibilityWP"/>
  <!-- Check for cross-version support for PHP 7.2 and higher. -->
  <config name="testVersion" value="7.2-"/>
</ruleset>